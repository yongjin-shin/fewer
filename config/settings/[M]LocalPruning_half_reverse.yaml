# federated arguments
nb_rounds: 120  # communication rounds
nb_devices: 200  # 로컬 클라이언트 수
nb_server_data: 0  # 서버가 지니고 있는 데이터 개수
local_ep: 5  # 로컬 모델 update 횟수
local_bs: 50  # 로컬 Training Batch Size
ratio_clients_per_round: 0.1  # 한 라운드에 몇 명에게 보낼까?
aggregation_alg: 'fedavg' # aggregtion algorithm

# fedPR arguments
pruning: True
pruning_type: 'local_pruning_half'
recovery: False

plan: [0, 100, 20] # [warming_rounds, pruning_rounds, tuning_rounds]
target_sparsity: 0.9
plan_type: 'reverse'


# model arguments
model: 'mnistcnn' #mlp, mnistcnn, cifarcnn, testcnn, vgg
hidden: 256
loss_func: 'CrossEntropy'
lr: 0.01
optimizer: 'sgd'  # 'adam', 'sgd'
momentum: 0.9
weight_decay: 0  # 5e-4


# dataset arguments
dataset: 'mnist' # mnist, fmnist, cifar10
iid: False  # True, False
nb_max_classes: 2  # non-iid일 경우, 하나의 로컬이 가질 수 있는 최대한 class 개수

# misc
experiment_name: 'local_pruning_half_reverse'
gpu: True  # True, False | check :: misc.py >> function[fix_arguments]
server_location: 'cpu'  # gpu, cpu, save
seed: 100
nb_exp_reps: 3  # 반복실험 횟수

